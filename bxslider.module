<?php

/**
 * @file
 * BxSlider integration.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function bxslider_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the bxslider module.
    case 'help.page.bxslider':
      $output = '';
      $output .= '<h3>' . t('About BxSlider') . '</h3>';
      $output .= '<p>' . t('Integration BxSlider with Field Formatter.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function bxslider_theme($existing, $type, $theme, $path) {
  return [
    'bxslider' => [
      'variables' => [
        'items' => [],
        'settings' => [],
      ],
      'template' => 'bxslider',
    ],
    'bxslider_ths' => [
      'variables' => [
        'items' => [],
        'thumbnail_items' => [],
        'settings' => [],
      ],
      'template' => 'bxslider-thumbnail',
    ],
  ];
}

/**
 * Preprocess function.
 */
function template_preprocess_bxslider(&$variables) {
  foreach ($variables['items'] as $key => $item) {

    if ($variables['settings']['colorbox']['enable']) {

      // Configure colorbox formatter according to current settings.
      $colorbox_formatter_settings = [
        'style_name' => $variables['settings']['image_style'],
        'colorbox_node_style' => $variables['settings']['image_style'],
        'colorbox_node_style_first' => $variables['settings']['image_style'],
        'colorbox_image_style' => $variables['settings']['colorbox']['image_style'],
        'colorbox_gallery' => $variables['settings']['colorbox']['colorbox_gallery'],
        'colorbox_gallery_custom' => $variables['settings']['colorbox']['colorbox_gallery_custom'],
        'colorbox_caption' => $variables['settings']['colorbox']['colorbox_caption'],
        'colorbox_caption_custom' => $variables['settings']['colorbox']['colorbox_caption_custom'],
      ];

      // Use Colorbox Formatter theme.
      $variables['slides'][$key]['image'] = [
        '#theme' => 'colorbox_formatter',
        '#item' => $item['item'],
        '#item_attributes' => $item['item_attributes'],
        '#entity' => $item['entity'],
        '#settings' => $colorbox_formatter_settings,
      ];

    }
    elseif (!empty($variables['settings']['image_style'])) {
      $variables['slides'][$key]['image'] = [
        '#theme' => 'image_style',
        '#style_name' => $variables['settings']['image_style'],
      ];
    }
    else {
      $variables['slides'][$key]['image'] = [
        '#theme' => 'image',
      ];
    }

    if (($entity = $item['item']->entity) && empty($item['item']->uri)) {
      $variables['slides'][$key]['image']['#uri'] = $entity->getFileUri();
    }
    else {
      $variables['slides'][$key]['image']['#uri'] = $item['item']->uri;
    }

  }

  if ($variables['settings']['colorbox']['enable']) {
    // Attach Colorbox libraries.
    \Drupal::service('colorbox.attachment')->attach($variables);
  }
}

/**
 * Preprocess function.
 */
function template_preprocess_bxslider_ths(&$variables) {

  template_preprocess_bxslider($variables);

  foreach ($variables['thumbnail_items'] as $key => $item) {

    if (!empty($variables['settings']['thumbnail_slider']['thumbnail_style'])) {
      $variables['thumbnails'][$key]['image'] = [
        '#theme' => 'image_style',
        '#style_name' => $variables['settings']['thumbnail_slider']['thumbnail_style'],
      ];
    }
    else {
      $variables['thumbnails'][$key]['image'] = [
        '#theme' => 'image',
      ];
    }

    if (($entity = $item->entity) && empty($item->uri)) {
      $variables['thumbnails'][$key]['image']['#uri'] = $entity->getFileUri();
    }
    else {
      $variables['thumbnails'][$key]['image']['#uri'] = $item->uri;
    }
  }

}
